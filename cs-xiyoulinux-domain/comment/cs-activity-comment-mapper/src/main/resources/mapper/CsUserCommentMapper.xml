<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiyoulinux.activity.comment.mapper.CsUserCommentMapper">

    <resultMap id="BaseResultMap"
               type="com.xiyoulinux.activity.comment.entity.CsUserActivityComment">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="activityId" column="activity_id" jdbcType="VARCHAR"/>
        <result property="commentContent" column="comment_content" jdbcType="VARCHAR"/>
        <result property="commentLikes" column="comment_likes" jdbcType="INTEGER"/>
        <result property="commentCreateTime" column="comment_create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="CommentMap"
               type="com.xiyoulinux.activity.comment.bo.ActivityCommentNumber">
        <result property="activityId" column="activity_id" jdbcType="VARCHAR"/>
        <result property="commentNumbers" column="count" javaType="Long"/>
    </resultMap>

    <update id="mergeLikes" parameterType="java.util.Map">
        <foreach collection="likes.entrySet()" index="key" item="value" separator=";">
            update cs_user_activity_comment set comment_likes =
            comment_likes + #{value} where id = #{key}
        </foreach>
    </update>

    <select id="selectPageByActivityId" resultMap="BaseResultMap">
        select id,
               user_id,
               comment_content,
               comment_likes,
               comment_create_time
        from cs_user_activity_comment
        where activity_id = #{activityId}
        order by comment_create_time DESC
    </select>

    <select id="getCommentNumberByActivityId" resultMap="CommentMap">
        select
        activity_id,COUNT(*) as count
        from cs_user_activity_comment
        where activity_id in
        <foreach collection="activityIdList" item="activityId" open="(" close=")" separator=",">
            #{activityId}
        </foreach>
        group by activity_id

    </select>
    <select id="selectPageByActivityIdOrderByLikes" resultMap="BaseResultMap">
        select id,
               user_id,
               comment_content,
               comment_likes,
               comment_create_time
        from `cs_user_activity_comment`
        where activity_id = #{activityId}
    </select>

    <delete id="deleteByActivityId">
        delete
        from cs_user_activity_comment
        where activity_id = #{activityId,jdbcType=VARCHAR}
    </delete>

</mapper>
