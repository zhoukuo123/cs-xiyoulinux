server:
  port: 8001
  servlet:
    context-path: /cs-activity
#########################################
#  文件上传大小限制
#########################################
spring:
  # 服务名称
  application:
    name: cs-activity-service
    address: 127.0.0.1
  elasticsearch:
    rest:
      uris: http://localhost:9200
  rabbitmq:
    host: ${spring.application.address}
    port: 5672
    username: qkm
    password: qkm
    publisher-confirm-type: correlated # 确保消息发送成功
    publisher-returns: true # 开启发布者发送失败退回
    virtual-host: /
  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB
      max-request-size: 100MB
  # 数据库连接池
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${spring.application.address}:3306/cs_dynamic?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC
    username: root
    password: 13468724917qkm,
  # nacos注册
  cloud:
    nacos:
      group: SEATA_GROUP
      discovery:
        enabled: true
        server-addr: ${spring.application.address}:8848 # Nacos 服务器地址
        namespace: 2b1ec0ac-fd61-4aef-a32f-cd829bea9d97
        metadata:
          management:
            context-path: ${server.servlet.context-path}/actuator
    # rabbitmq 生产者配置
    stream:
      bindings:
        activityOutput:
          destination: activity-exchange #对应 rabbitmq的 exchange
          content-type: application/json
          binder: rabbit


############################################
# dubbo配置
############################################
dubbo:
  protocol:
    name: dubbo
    port: -1
  registry:
    address: spring-cloud://${spring.application.address}
  # dubbo订阅的服务，如果是提供者填写本服务的名称
  cloud:
    subscribed-services: cs-activity-comment-service,cs-search-service,cs-file-service
  consumer:
    loadbalance: leastactive
    check: false
############################################
# seata配置
############################################
seata:
  # 自定义nacos
  # 事务分组
  tx-service-group: cs_xiyoulinux_test
  # 注册到 nacos 分组---可以统一修改
  registry:
    type: nacos
    nacos:
      application: seata-server
      server-addr: ${spring.application.address}:8848
      group: ${spring.cloud.nacos.group}
      namespace: ${spring.cloud.nacos.discovery.namespace}
      username: nacos
      password: nacos
  # 配置也在nacos上
  config:
    type: nacos
    nacos:
      server-addr: ${spring.application.address}:8848
      group: ${spring.cloud.nacos.group}
      namespace: ${spring.cloud.nacos.discovery.namespace}
      dataId: seata-config
      username: nacos
      password: nacos
  # 关闭自动生成代理数据源
  enable-auto-data-source-proxy: false
# 暴露端点
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always